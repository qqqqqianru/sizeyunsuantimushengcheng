#include<iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#include <windows.h>
#include <windef.h>
#include <math.h>
#include<fstream>
#include<iomanip>
using namespace std;
double nums[100];
char str[100];
int n, Max, flag, q = 1;
int 
    pos = 0,         ///pos为 + - * /的位置
    pos1 = -1,        ///pos1,pos2为括号位置
    pos2 = -1;
ofstream ofile;
 void randomNumber()                                
 {
    flag = rand() % 3 + 2;
    for(int i = 0; i < flag; i++)
    {
     nums[i] = (rand() % Max) + 1;
    }
 }
void randomBrackets()                            
 { pos1 = -1;
 os2 = -1;
       while(1)
       {
         pos1 = rand() % flag;
         pos2 = rand() % flag;
         if(abs(pos1-pos2))
         {
            pos1 = min(pos1, pos2);
            pos2 = max(pos1, pos2);
            break;
         }
       }
       if(flag == 2)
       {
            pos1 = -1;
            pos2 = -1;
       }
 }
 void priduction()                                 
 {
    for(int i = 0; i < flag; i++)
    {
        int k = rand()% pos;                 
        if(i == pos1 && pos1!=pos2)
        {
            cout<< "("<<" ";
            ofile<<"("<<" ";
        }
        cout << nums[i] << " ";
       ofile<<nums[i]<<" ";
        if(i == pos2 && pos1!=pos2)
        {
            cout<< ")" <<" ";
             ofile<<")"<<" ";
        }
        if(i != flag-1)
        {
            cout<< str[k] << " ";
           ofile<<str[k]<<" ";
        }
    }
 }
int main(){

    ofile.open("E:\12321.txt" );
    cout << "请输入题目数量" << endl;
    cin >> n ;
    Max=1000;
    cout << "请输入想要的运算符"<<endl;
    getchar();
    gets(str);
    for(int i = 0; i < strlen(str); i++)
    {
        if(str[i] == '+' || str[i] == '-' || str[i] == '*' || str[i] == '/')
        {
           str[pos++] = str[i];                       
        }
    }
    while(n--)
    {
        randomNumber();
        randomBrackets();
        ofile<<"(" << q << ")"<< "  ";
        cout << "(" << q++ << ")"<< "  ";
        priduction();
        cout<< endl;
        ofile<<endl;
    }
    ofile.close();
    return 0;
}
